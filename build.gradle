plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

group = 'com.herokuapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// Mike Moeller Nielsen
/*configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}*/

repositories {
	mavenCentral()
}

// Mike Moeller Nielsen
/*node {
	version = "10.11.0"
	download = true
	npmVersion = "6.4.1"
	workDir = file("${project.projectDir}/src/main/frontend/nodejs")
	npmWorkDir = file("${project.projectDir}/src/main/frontend/npm")
	nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}*/

task npmInstallDependencies(type: NpmTask) {
	dependsOn "npmSetup"
	execOverrides {
		it.ignoreExitValue = true
		it.workingDir = "src/main/frontend"
	}
	args = ["install"]
}

task npmBuild(type: NpmTask) {
	dependsOn "npmInstallDependencies"
	execOverrides {
		it.workingDir = "src/main/frontend"
	}
	args = ["run", "build"]
}

task copyFrontendToBuild(type: Copy) {
	dependsOn "npmBuild"
	from "$projectDir/src/main/frontend/build"
	into "$buildDir/resources/main/static"
}

processResources {
	dependsOn "copyFrontendToBuild"
}

dependencies {
	// start.spring.io:
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	//implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//runtimeOnly 'com.h2database:h2'

	// Mike Moeller Nielsen
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//compileOnly "org.projectlombok:lombok"
	//annotationProcessor "org.projectlombok:lombok"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
